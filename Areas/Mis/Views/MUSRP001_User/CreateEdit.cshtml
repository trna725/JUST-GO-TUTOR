@model JUSTGOTUTOR.Models.Users

@{
    ViewData["Title"] = "CreateEdit";
    Layout = "_LayoutAdmin";

    using var codedata = new z_repoCodeDatas();
    List<SelectListItem> genders = new List<SelectListItem>();
    genders = codedata.GetDropDownList("Gender", true);

    using var role = new z_repoRoles();
    List<SelectListItem> roles = new List<SelectListItem>();
    roles = role.GetExcludeRoleDropDownList("Admin", "Mis", true);

    using var country = new z_repoCountry();
    List<SelectListItem> countrys = new List<SelectListItem>();
    countrys = country.GetDropDownList(true);
}

@using (Html.BeginForm())
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @* @Html.HiddenFor(model => model.Id) *@

    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.UserNo)
        </div>
        <div class="col-md-10 control-label">
            @{
                if (Model.Id == 0)
                {
                    @Html.EditorFor(model => model.UserNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserNo, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DisplayFor(model => model.UserNo, new { htmlAttributes = new { @class = "form-control" } })
                    ;
                }
            }
        </div>
    </div>
    @* <div class="row form-group my-3">
<div class="control-label col-md-2">
@Html.DisplayNameFor(m => m.Password)
</div>
<div class="col-md-10">
@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
</div>
</div> *@
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.UserName)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.IsValid)
        </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsValid, new { htmlAttributes = new { @class = "form-check" } })
                @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.GenderCode)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GenderCode, genders, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GenderCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.RoleNo)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RoleNo, roles, new
                {
                    @class = "form-control RoleNo",
                    id = "dropdown",
                    @* id = "RoleNo",
        @onchange = "onChanged()" *@
                })
            @Html.ValidationMessageFor(model => model.RoleNo, "", new { @class = "text-danger" })
        </div>
    </div>
    @* <div class="row form-group">
<div class="control-label col-md-2">
@Html.DisplayNameFor(m => m.RoleName)
</div>
<div class="col-md-10">
@Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
@Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
</div>
</div> *@
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.CountryNo)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryNo, countrys, new { @class = "form-control" })
            @* @Html.EditorFor(model => model.CountryNo, new { htmlAttributes = new { @class = "form-control" } }) *@
            @Html.ValidationMessageFor(model => model.CountryNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="ReviewStar" class="row form-group my-3 ReviewStarDiv" style="display: none;">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.ReviewStar)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReviewStar, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReviewStar, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.Birthday)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Birthday, new
                {
                    htmlAttributes = new
                    {
                        @type = "date",
                        @class = "form-control",
                        @value = Model.Birthday
                    }
                })
            @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.ContactEmail)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.ContactTel)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactTel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactTel, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.ContactAddress)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.Remark)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr>
    <div class="row form-group my-3">
        <div class="col-md-12">
            <input type="submit" value="異動存檔" class="btn btn-primary" />
            @Html.ActionLink("返回列表", "Index", ActionService.Controller,
                     new { area = ActionService.Area }, new { @class = "btn btn-success" })
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {

            debugger;
            const dropdown = document.getElementById("dropdown");
            const reviewstar = document.getElementById("ReviewStar");
            dropdown.addEventListener('change', function () {

                if (dropdown.value == "Teacher") {
                    reviewstar.style.display = 'flex';
                }
                else {
                    reviewstar.style.display = 'none';
                }
            })
        });
        @* $(document).ready(function () {

        debugger;
        var select = document.getElementById("RoleNo").value;

        $(".RoleNo").show(function () {
        if (select != "Teacher") {
        $(".ReviewStarDiv").hide();
        }
        else {
        $(".ReviewStarDiv").show();
        }
        });

        console.log(select);

        });

        function onChanged() {
        debugger;
        var select = document.getElementById("RoleNo").value;

        $(".RoleNo").show(function () {
        if (select == "Teacher") {
        $(".ReviewStarDiv").show();
        }
        else {
        $(".ReviewStarDiv").hide();
        }
        });
        console.log(select);
        }        *@
    </script>
}