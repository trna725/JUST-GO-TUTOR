@model JUSTGOTUTOR.Models.Users

@{
    ViewData["Title"] = "CreateEdit";
    Layout = "_LayoutAdmin";

    List<SelectListItem> GenderList = new List<SelectListItem>();
    using var codeDatas = new z_repoCodeDatas();
    GenderList = codeDatas.GetDropDownList("Gender", false);

}

@using (Html.BeginForm())
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.Id)
    <div class="row form-group my-3">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.UserNo)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.Password)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.UserName)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.IsValid)
        </div>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsValid)
                @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.RoleName)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.GenderName)
        </div>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GenderName, GenderList, new
                {
                    htmlAttributes = new { @class = "form-control" }
                })
            @Html.ValidationMessageFor(model => model.GenderName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.DeptName)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.TitleName)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TitleName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TitleName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.CodeNo)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CodeNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CodeNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.RoleNo)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.RoleNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RoleNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.GenderCode)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.GenderCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GenderCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.CountryNo)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.CountryNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CountryNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.DeptNo)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeptNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeptNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="control-label col-md-2">
            @Html.DisplayNameFor(m => m.Remark)
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr>
    <div class="row form-group">
        <div class="col-md-12">
            <input type="submit" value="異動存檔" class="btn btn-primary" />
            @Html.ActionLink("返回列表", "Index", ActionService.Controller,
                     new { area = ActionService.Area }, new { @class = "btn btn-success" })
        </div>
    </div>
}
